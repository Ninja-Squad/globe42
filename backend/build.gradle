buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.40'
        classpath 'org.jetbrains.kotlin:kotlin-noarg:1.2.40'
        classpath 'org.flywaydb:flyway-gradle-plugin:5.0.3'
        classpath 'org.postgresql:postgresql:42.2.2'
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.40"
    id "org.jetbrains.kotlin.plugin.spring" version "1.2.40"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.2.40"
    id "org.flywaydb.flyway" version "5.0.3"
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
    id "org.jetbrains.dokka" version "0.9.16"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
[compileKotlin, compileTestKotlin].each { it ->
    it.kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict", "-Xenable-jvm-default"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict", "-Xenable-jvm-default"]
        jvmTarget = "1.8"
    }
}

tasks.withType(JavaCompile) {
    // enable parameter name preservation, used by Jackson
    options.compilerArgs.add('-parameters')

    // disable annotation processing which generates a gradle warning
    options.compilerArgs.add('-proc:none')
}

bootJar {
    archiveName = 'globe42.jar'
    dependsOn ':frontend:npm_run_build'

    into('BOOT-INF/classes/static') {
        from "${project(':frontend').projectDir}/dist"
    }
}

bootRun {
    args '--spring.profiles.active=demo'
    args '--globe42.secretKey=QMwbcwa19VV02Oy5T7LSWyV+/wZrOsRRfhCR6TkapsY='
    args '--globe42.googleCloudStorageCredentialsPath=' + rootProject.file('secrets/google-cloud-storage-dev.json')
}

ext['flyway.version'] = '4.2.0' // old version needed because Clever cloud only supports postgresql 9.2, and Flyway 5 doesn't support 9.2 anymore

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.jsonwebtoken:jjwt:0.9.0'
    implementation 'com.google.cloud:google-cloud-storage:1.24.1'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.flywaydb:flyway-core'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
    testImplementation 'com.ninja-squad:DbSetup:2.1.0'
    testImplementation 'com.ninja-squad:DbSetup-kotlin:2.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

// remove default tasks added by flyway plugin
tasks.removeIf { it.name.startsWith('flyway') }

task flywayCleanInteg(type: org.flywaydb.gradle.task.FlywayCleanTask) {
    url = 'jdbc:postgresql://localhost:5432/globe42'
    user = 'globe42'
    password = 'globe42'
}

task flywayCleanTest(type: org.flywaydb.gradle.task.FlywayCleanTask) {
    url = 'jdbc:postgresql://localhost:5432/globe42_test'
    user = 'globe42'
    password = 'globe42'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

springBoot {
    buildInfo()
}
